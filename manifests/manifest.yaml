apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-ingress-1
  namespace: test
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`example.com`) || (Host(`example.org`) && Path(`/traefik`))
    services:
    - name: test-svc
      namespace: test2
      port: 80
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-ingress-2
  namespace: test
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`example2.com`) || (Host(`example2.org`) && Path(`/traefik`))
    services:
    - name: test-svc
      namespace: test2
      port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
spec:
  ingressClassName: nginx
  rules:
  - host: "1.foo.com"
    http:
      paths:
      - path: /testpath
        pathType: Prefix
        backend:
          service:
            name: test-svc
            namespace: test-svc
            port:
              number: 80
      - path: /testpath2
        pathType: Prefix
        backend:
          service:
            name: test-svc
            namespace: test-svc
            port:
              number: 80
  - host: "2.foo.com"
    http:
      paths:
      - path: /testpath
        pathType: Prefix
        backend:
          service:
            name: test-svc
            port:
              number: 80
      - path: /testpath2
        pathType: Prefix
        backend:
          service:
            name: test-svc
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: test-svc
  namespace: test
spec:
  type: ClusterIP
  selector:
    app: test
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  namespace: test
spec:
  selector:
    matchLabels:
      app: test
  replicas: 1
  template:
    metadata:
      labels:
        app: test
    spec:
      containers:
      - name: nginx
        image: nginx:1.24.0-alpine
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    kubernetes.io/metadata.name: test2
    argocd.argoproj.io/managed-by: test
  name: test2
---
apiVersion: v1
kind: Service
metadata:
  name: test-svc
  namespace: test2
spec:
  type: ClusterIP
  selector:
    app: test
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  namespace: test2
spec:
  selector:
    matchLabels:
      app: test
  replicas: 1
  template:
    metadata:
      labels:
        app: test
    spec:
      containers:
      - name: nginx
        image: nginx:1.24.0-alpine
        ports:
        - containerPort: 80
